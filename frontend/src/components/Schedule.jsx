import React, { useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Link } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';
import '../styles/schedule.css';

function Schedule() {
  const { isAuthenticated, user } = useAuth();
  const navigate = useNavigate();

  // Redirect to home if not authenticated
  useEffect(() => {
    if (!isAuthenticated) {
      navigate('/');
    }
  }, [isAuthenticated, navigate]);

  // Mock data - replace with real data from backend
  const mockData = {
    todaySchedule: [
      { id: 1, time: '08:00 ุต', course: 'ุงูุฑูุงุถูุงุช 101', instructor: 'ุฏ. ุฃุญูุฏ ูุญูุฏ', room: 'ุงููุงุนุฉ 201', duration: '90 ุฏูููุฉ', type: 'ูุญุงุถุฑุฉ' },
      { id: 2, time: '10:30 ุต', course: 'ูุนูู ุงูููุฒูุงุก', instructor: 'ุฏ. ูุงุทูุฉ ุนูู', room: 'ุงููุนูู 105', duration: '120 ุฏูููุฉ', type: 'ูุนูู' },
      { id: 3, time: '02:00 ู', course: 'ุงูุฃุฏุจ ุงูุฅูุฌููุฒู', instructor: 'ุฏ. ุณุงุฑุฉ ุฃุญูุฏ', room: 'ุงููุงุนุฉ 301', duration: '90 ุฏูููุฉ', type: 'ูุญุงุถุฑุฉ' },
      { id: 4, time: '04:30 ู', course: 'ุงูุจุฑูุฌุฉ ุงููุชูุฏูุฉ', instructor: 'ุฏ. ูุญูุฏ ุฎุงูุฏ', room: 'ูุนูู ุงูุญุงุณูุจ 1', duration: '120 ุฏูููุฉ', type: 'ูุนูู' }
    ],
    weekSchedule: {
      'ุงูุฃุญุฏ': [
        { time: '08:00 ุต', course: 'ุงูุฑูุงุถูุงุช 101', room: 'ุงููุงุนุฉ 201' },
        { time: '10:30 ุต', course: 'ูุนูู ุงูููุฒูุงุก', room: 'ุงููุนูู 105' }
      ],
      'ุงูุงุซููู': [
        { time: '09:00 ุต', course: 'ุงูุฃุฏุจ ุงูุฅูุฌููุฒู', room: 'ุงููุงุนุฉ 301' },
        { time: '11:30 ุต', course: 'ุงูุจุฑูุฌุฉ ุงููุชูุฏูุฉ', room: 'ูุนูู ุงูุญุงุณูุจ 1' }
      ],
      'ุงูุซูุงุซุงุก': [
        { time: '08:00 ุต', course: 'ููุงุนุฏ ุงูุจูุงูุงุช', room: 'ุงููุงุนุฉ 401' },
        { time: '10:30 ุต', course: 'ุดุจูุงุช ุงูุญุงุณูุจ', room: 'ูุนูู ุงูุดุจูุงุช' }
      ],
      'ุงูุฃุฑุจุนุงุก': [
        { time: '09:00 ุต', course: 'ุงูุฑูุงุถูุงุช 101', room: 'ุงููุงุนุฉ 201' },
        { time: '11:30 ุต', course: 'ูุนูู ุงูููุฒูุงุก', room: 'ุงููุนูู 105' }
      ],
      'ุงูุฎููุณ': [
        { time: '08:00 ุต', course: 'ุงูุฃุฏุจ ุงูุฅูุฌููุฒู', room: 'ุงููุงุนุฉ 301' },
        { time: '10:30 ุต', course: 'ุงูุจุฑูุฌุฉ ุงููุชูุฏูุฉ', room: 'ูุนูู ุงูุญุงุณูุจ 1' }
      ],
      'ุงูุณุจุช': [
        { time: '09:00 ุต', course: 'ููุงุนุฏ ุงูุจูุงูุงุช', room: 'ุงููุงุนุฉ 401' },
        { time: '11:30 ุต', course: 'ุดุจูุงุช ุงูุญุงุณูุจ', room: 'ูุนูู ุงูุดุจูุงุช' }
      ],
    }
  };

  if (!isAuthenticated) {
    return null; // Don't render anything while redirecting
  }

  return (
    <div className="schedule-page">
        <header className='schedule-head'>
        <h1>ุฌุฏูู ุงููุญุงุถุฑุงุช</h1>

        </header>
       
      

      <div className="schedule-stats">
        <div className="stat-card">
          <h3>ูุญุงุถุฑุงุช ุงูููู</h3>
          <div className="stat-number">{mockData.todaySchedule.length}</div>
          <p>ูุญุงุถุฑุงุช ููุนุงูู</p>
        </div>
        <div className="stat-card">
          <h3>ุฅุฌูุงูู ุงูุณุงุนุงุช</h3>
          <div className="stat-number">
            {mockData.todaySchedule.reduce((sum, class_) => {
              const duration = parseInt(class_.duration);
              return sum + (isNaN(duration) ? 90 : duration);
            }, 0) / 60}
          </div>
          <p>ุณุงุนุฉ ุฏุฑุงุณูุฉ</p>
        </div>
        <div className="stat-card">
          <h3>ุงููุญุงุถุฑุฉ ุงููุงุฏูุฉ</h3>
          <div className="stat-number">
            {mockData.todaySchedule.length > 0 ? mockData.todaySchedule[0].time : 'ูุง ุชูุฌุฏ'}
          </div>
          <p>ูู ุงูููู</p>
        </div>
      </div>

      <main className="schedule-content schedule-columns">
        <section className="today-schedule">
          <h2>ุฌุฏูู ุงูููู</h2>
          <div className="schedule-list">
            {mockData.todaySchedule.map(class_ => (
              <div key={class_.id} className="schedule-item">
                <div className="time-section">
                  <div className="time">๐{class_.time}</div>
                  <div className="duration">{class_.duration}</div>
                </div>
                <div className="class-info">
                  <h4>{class_.course}</h4>
                  <p><strong>ุงููุญุงุถุฑ:</strong> {class_.instructor}</p>
                  <p><strong>ุงููุงุนุฉ:</strong> {class_.room}</p>
                  <span className="class-type">{class_.type}</span>
                </div>
                <div className="class-actions">
                  <Link to={`/course/${class_.id}`} className="btn btn-outline">ุชูุงุตูู ุงูููุฑุฑ</Link>
                </div>
              </div>
            ))}
          </div>
        </section>

        <section className="week-schedule">
          <h2>ุฌุฏูู ุงูุฃุณุจูุน</h2>
          <div className="week-grid">
            {Object.entries(mockData.weekSchedule).map(([day, classes]) => (
              <div key={day} className="day-card">
                <h3>{day}</h3>
                <div className="day-classes">
                  {classes.map((class_, index) => (
                    <div key={index} className="day-class">
                      <span className="class-time">{class_.time}</span>
                      <span className="class-name">{class_.course}</span>
                      <span className="class-room">{class_.room}</span>
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </section>
      </main>
    </div>
  );
}

export default Schedule; 